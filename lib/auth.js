// Generated by CoffeeScript 1.4.0
var EtAuth, Strategy, passport;

passport = require('passport');

Strategy = require('passport-local').Strategy;

EtAuth = (function() {

  function EtAuth() {}

  EtAuth.enableAuth = function(opts) {
    console.log('enabling auth');
    opts.auth || (opts.auth = {});
    if (!opts.auth.validator) {
      opts.auth.validator = function(username, password) {
        return false;
      };
    }
    this.validator = opts.auth.validator;
    return passport.use(new Strategy(function(username, password, done) {
      var user;
      if (!(user = this.validator(username, password))) {
        return done(null, false, {
          message: 'Invalid username or password.'
        });
      }
      return done(null, user);
    }));
  };

  EtAuth.config = function(opts) {
    var et;
    if (opts == null) {
      opts = {};
    }
    this.enabled = opts.auth !== false;
    if (this.enabled) {
      if (!et) {
        et = require('et');
      }
      if (et.session === void 0 || !et.session.enabled) {
        console.log("auth requires session");
        this.enabled = false;
      }
      if (et.rest === void 0 || !et.rest.models.users) {
        if (!(opts.auth && opts.auth.validator)) {
          console.log("auth requires user model or validator override");
          this.enabled = false;
        }
      }
      if (this.enabled && opts.app) {
        this.enableAuth(opts);
      }
    }
    return function(req, res, next) {
      return next();
    };
  };

  return EtAuth;

})();

module.exports = EtAuth;
